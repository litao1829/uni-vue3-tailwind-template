'use strict';

function isRegexp(value) {
    return Object.prototype.toString.call(value) === '[object RegExp]';
}
function isMap(value) {
    return Object.prototype.toString.call(value) === '[object Map]';
}
function regExpTest(arr = [], str) {
    if (Array.isArray(arr)) {
        for (let i = 0; i < arr.length; i++) {
            const item = arr[i];
            if (typeof item === 'string') {
                if (item === str) {
                    return true;
                }
            }
            else if (isRegexp(item)) {
                item.lastIndex = 0;
                if (item.test(str)) {
                    return true;
                }
            }
        }
        return false;
    }
    throw new TypeError("paramater 'arr' should be a Array of Regexp | String !");
}
const noop = () => { };

exports.isMap = isMap;
exports.isRegexp = isRegexp;
exports.noop = noop;
exports.regExpTest = regExpTest;
