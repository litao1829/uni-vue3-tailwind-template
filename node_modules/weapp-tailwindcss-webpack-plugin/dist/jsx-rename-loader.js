'use strict';

var loaderUtils = require('loader-utils');
var fs = require('fs');
var path = require('path');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var fs__default = /*#__PURE__*/_interopDefaultCompat(fs);
var path__default = /*#__PURE__*/_interopDefaultCompat(path);

function mkfileSync(filename, content) {
    try {
        const dirname = path__default["default"].dirname(filename);
        if (!fs__default["default"].existsSync(dirname)) {
            fs__default["default"].mkdirSync(dirname, {
                recursive: true
            });
        }
        fs__default["default"].writeFileSync(filename, content, 'utf-8');
    }
    catch (error) {
        console.error(error);
    }
}

function loader(content) {
    this.cacheable && this.cacheable();
    const { jsxHandler, write } = loaderUtils.getOptions(this);
    if (write) {
        const t = path__default["default"].resolve(write.dir, '.' + this.resource.replace(this.context, '') + '.tmp');
        mkfileSync(t, content);
    }
    const { code } = jsxHandler(content);
    return code;
}

module.exports = loader;
